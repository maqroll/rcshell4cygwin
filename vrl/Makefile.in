# $Id: Makefile.in,v 1.13 2000/05/10 21:07:48 vons Exp $
#
# Makefile template for 'vrl' version 1.3.3, used by 'configure'
#
# Targets:
#	all	 : builds vrl
#	clean    : removes all objects
#	distclean: removes all objects, *and* all files that can be
#		   recreated by the distrib. This includes libvrl.a itself,
#		   the Makefile, config.h, and config.status.
#	spotless : removes *all* files that are not strictly necessary,
#		   including the configure script. Don't do this if you
#		   don't have gnu's autoconf/autoheader !
#
# If you want to maintain different builds in parallel, you can do
#
#	mkdir fbsd
#	cd fbsd
#	../configure
#	make
#
# which will build a fbsd version in a subdir named fbsd.
#

CFLAGS=@CFLAGS@
LIBS=@LIBS@
srcdir=@srcdir@

CC=@CC@
RM=@RM@
LINT=@LINT@
RANLIB=@RANLIB@
MYARFLAGS=@MYARFLAGS@

SHELL=/bin/sh
CPPFLAGS=-I. -I$(srcdir)

# LIBNAME specifies how the vrl library will be named
#
LIBNAME=libvrl.a

#------------------ Compiler/lint specific options for max warnings
# SCO OpenServer 5.0.2
#
#CFLAGS=-a posix -w3 -v -Xc -O
#LINTFLAGS=-Xc

# SCO UnixWare 2.1.2
#
#CFLAGS=-v -Xc -O
#LINTFLAGS=

# SunOS 4.1.x /bin/cc, /bin/lint    
# (/usr/5bin/lint needs empty LINTFLAGS!)
#
#CFLAGS=-O
#LINTFLAGS=-a -b -c -h
#LINT=lint

# SunOS/Solaris with Sun's SC-3.01, SC-4.0
#
#CFLAGS=-Xc -vc -O
#LINTFLAGS=-Xc

# For any gcc
GCCFLAGS=-ansi -pedantic -Wall -Wnested-externs \
         -Wmissing-prototypes -Wstrict-prototypes -Wconversion -Wcast-align \
         -Wcast-qual -Wpointer-arith -Wshadow -Wtraditional \
         -Waggregate-return -Wwrite-strings -Wformat

# FreeBSD 2.1.7 with a port of NetBSD's xlint
#
#CFLAGS+=$(GCCFLAGS)
#LINTFLAGS=-aa -b -c -e -n -r -s -H -lansi -lposix -lterm -lsyscall -lfunc

# FreeBSD 2.2.x
# (lint complains a bit too much about the system includes)
#
#CFLAGS+=$(GCCFLAGS)
#LINTFLAGS=-aa -b -c -e -h -r -s -H -x

# OpenBSD 2.x
# -lstdc is not optimal, but llib-lc.ln is missing...
#CFLAGS+=$(GCCFLAGS)
#LINTFLAGS=-aa -b -c -e -h -r -s -H -x -lstdc

# Any GCC (Linux, ...)
#
#CFLAGS+=$(GCCFLAGS)

# QNX4 with Watcom C 10.x
#CFLAGS+=-wx -g

#CPPFLAGS+=-DDEBUG

#------------ End of Compiler/lint specific options for max warnings

# vrl.c must be first, calls all the others (linker complains...)
SRCS=	$(srcdir)/vrl.c \
	$(srcdir)/complete.c \
	$(srcdir)/history.c \
	$(srcdir)/iline.c \
	$(srcdir)/opt.c \
	$(srcdir)/out.c \
	$(srcdir)/screen.c \
	$(srcdir)/sig.c \
	$(srcdir)/sym.c \
	$(srcdir)/str.c \
	$(srcdir)/tty.c \
	$(srcdir)/util.c \
	$(srcdir)/wildexp.c

OBJS=	vrl.o \
	complete.o \
	history.o \
	iline.o \
	opt.o \
	out.o \
	screen.o \
	sig.o \
	sym.o \
	str.o \
	tty.o \
	util.o \
	wildexp.o

all: $(LIBNAME)

#-----------------------------------------------------------------

$(LIBNAME): $(OBJS)
	$(AR) $(MYARFLAGS) $@ $(OBJS)
	$(RANLIB) $@

$(OBJS): $(srcdir)/vrl.h config.h

vrl.o: $(srcdir)/vrl.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/vrl.c
complete.o: $(srcdir)/complete.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/complete.c
wildexp.o: $(srcdir)/wildexp.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/wildexp.c
history.o: $(srcdir)/history.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/history.c
iline.o: $(srcdir)/iline.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/iline.c
opt.o: $(srcdir)/opt.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/opt.c
out.o: $(srcdir)/out.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/out.c
screen.o: $(srcdir)/screen.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/screen.c
sig.o: $(srcdir)/sig.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/sig.c
sym.o: $(srcdir)/sym.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/sym.c
str.o: $(srcdir)/str.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/str.c
tty.o: $(srcdir)/tty.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/tty.c
util.o: $(srcdir)/util.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/util.c

distclean:
	$(RM) -f $(OBJS) core *.core $(LIBNAME) config.h config.cache \
			config.log config.status Makefile

clean:
	$(RM) -f $(OBJS) rltest.o core *.core

lint:
	$(LINT) $(LINTFLAGS) $(CPPFLAGS) $(SRCS)

#------------------------------------------------------------------------
# NOTE: this removes *everything*, you need to run autconf and autoheader
#       to recreate config.h and the Makefile!
#
# (rltest is for testing purposes only)
spotless:
	$(RM) -f $(OBJS) core *.core $(LIBNAME) rltest.o rltest
	$(RM) -f config.status config.cache config.log config.h
	$(RM) -f configure config.h.in Makefile
	$(RM) -f vrl.shar vrl.tar vrl.tgz vrl.man
	$(RM) -rf vrl-*.* 

# next is for test purposes only

test: rltest

rltest: $(LIBNAME) rltest.o
	$(CC) -o $@ rltest.o $(LIBNAME) $(LIBS)
rltest.o: $(srcdir)/rltest.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(srcdir)/rltest.c

DISTFILES=README configure.in Makefile.in acconfig.h \
	complete.c history.c iline.c opt.c out.c rltest.c screen.c sig.c sym.c \
	str.c tty.c util.c vrl.c vrl.h wildexp.c wildexp.h vrl.3 vrlrc.default

# Don't make next target depend on DISTFILES. SCO make will check them
# even when the target is not referenced, causing a make to break.
shar tar tgz zoo:
	mkdist $@ vrl $(DISTFILES)

# A formatted manpage
vrl.man: $(srcdir)/vrl.3
	groff -man -Tascii $(srcdir)/vrl.3 > vrl.man

